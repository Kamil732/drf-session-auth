{"version":3,"sources":["redux/actions/types.js","components/Navbar.js","redux/actions/auth.js","hocs/Layout.js","containers/Home.js","components/CSRFToken.js","containers/Register.js","containers/Login.js","containers/Dashboard.js","redux/reducers/auth.js","redux/reducers/index.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT_SUCCESS","Navbar","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","exact","this","props","isAuthenticated","onClick","logout","Component","mapDispatchToProps","dispatch","a","config","headers","Cookies","get","body","JSON","stringify","axios","post","connect","state","auth","Layout","children","Home","CSRFToken","csrftoken","setState","console","log","name","value","Register","username","password","password2","onChange","e","target","onSubmit","preventDefault","register","placeholder","required","Login","login","Dashboard","loading","accounts","res","data","length","map","account","index","initialState","user","combineReducers","action","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAaA,EAAmB,mBACnBC,EAAgB,gBAEhBC,EAAgB,gBAChBC,EAAa,aAEbC,EAAwB,wBACxBC,EAAqB,qBAKrBC,EAAiB,iBCLxBC,E,uKAOE,OACI,qBAAKC,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,oBACA,wBAAQA,UAAU,iBAAiBE,KAAK,SAASC,iBAAe,WAAWC,iBAAe,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAAlK,SACI,sBAAMP,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BQ,GAAG,YAA7C,SACI,oBAAIR,UAAU,aAAd,SACI,qBAAIA,UAAU,WAAd,UACI,cAAC,IAAD,CAASA,UAAU,WAAWS,OAAK,EAACR,GAAG,IAAvC,kBAEIS,KAAKC,MAAMC,gBACP,cAAC,IAAD,CAASZ,UAAU,WAAWS,OAAK,EAACR,GAAG,IAAIY,QAASH,KAAKC,MAAMG,OAA/D,oBAEA,qCACI,cAAC,IAAD,CAASd,UAAU,WAAWS,OAAK,EAACR,GAAG,SAAvC,mBACA,cAAC,IAAD,CAASD,UAAU,WAAWS,OAAK,EAACR,GAAG,YAAvC,yC,GAxBvBc,aAwCfC,EAAqB,CACvBF,OCkCkB,yDAAM,WAAMG,GAAN,iBAAAC,EAAA,6DAClBC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAI7BC,EAAOC,KAAKC,UAAU,CACxB,iBAAmB,IAVC,SAalBC,IAAMC,KAAN,6CAAyDJ,EAAMJ,GAb7C,OAexBF,EAAS,CACLf,KAAMJ,IAhBc,2CAAN,wDD/BP8B,eARS,SAAAC,GAAK,MAAK,CAC9BjB,gBAAiBiB,EAAMC,KAAKlB,mBAOQI,EAAzBY,CAA6C7B,GElC7CgC,EAbf,uKAEQ,OACI,qCACI,cAAC,EAAD,IACA,cAAC,IAAD,UACKrB,KAAKC,MAAMqB,kBANhC,GAA4BjB,aCkBbkB,E,uKAhBP,OACI,qBAAKjC,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,YAAd,qCACA,mBAAGA,UAAU,OAAb,oCAGA,oBAAIA,UAAU,SACd,iEACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,yBAA5B,4B,GAZDe,a,QC0BJmB,E,4MAxBXL,MAAQ,CACJM,UAAW,I,qMAKDT,IAAMJ,IAAI,mD,OAEhBZ,KAAK0B,SAAS,CAAED,UAAWd,IAAQC,IAAI,e,+CAEvCe,QAAQC,IAAR,M,6IAIE,IACEH,EAAczB,KAAKmB,MAAnBM,UAER,OACI,uBAAOjC,KAAK,SAASqC,KAAK,sBAAsBC,MAAOL,Q,GAnB3CpB,aCIX0B,EAAb,4MAMIZ,MAAQ,CACJa,SAAU,GACVC,SAAU,GACVC,UAAW,IATnB,EAYIC,SAAW,SAAAC,GAAC,OAAI,EAAKV,SAAL,eAAiBU,EAAEC,OAAOR,KAAOO,EAAEC,OAAOP,SAZ9D,EAcIQ,SAAW,SAAAF,GACPA,EAAEG,iBADU,MAE8B,EAAKpB,MAAvCa,EAFI,EAEJA,SAAUC,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,UAE5B,EAAKjC,MAAMuC,SAASR,EAAUC,EAAUC,IAlBhD,uDAsBQ,IAAmC,IAA/BlC,KAAKC,MAAMC,gBACX,OAAO,cAAC,IAAD,CAAUX,GAAG,eAFnB,MAIqCS,KAAKmB,MAAvCa,EAJH,EAIGA,SAAUC,EAJb,EAIaA,SAAUC,EAJvB,EAIuBA,UAE5B,OACI,uBAAMI,SAAUtC,KAAKsC,SAArB,UACI,cAAC,EAAD,IAEA,8CACA,uBACIT,KAAK,WACLY,YAAY,cACZX,MAAOE,EACPG,SAAUnC,KAAKmC,SACfO,UAAQ,IAEZ,8CACA,uBACIb,KAAK,WACLY,YAAY,cACZX,MAAOG,EACPE,SAAUnC,KAAKmC,SACfO,UAAQ,IAEZ,sDACA,uBACIb,KAAK,YACLY,YAAY,sBACZX,MAAOI,EACPC,SAAUnC,KAAKmC,SACfO,UAAQ,IAGZ,wBAAQpD,UAAU,kBAAlB,6BAxDhB,GAA8Be,aAkExBC,EAAqB,CACvBkC,SJzCoB,SAACR,EAAUC,EAAUC,GAArB,8CAAmC,WAAM3B,GAAN,iBAAAC,EAAA,6DACjDC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAI7BC,EAAOC,KAAKC,UAAU,CAAEiB,WAAUC,WAAUC,cATK,kBAYjClB,IAAMC,KAAN,6CAAyDJ,EAAMJ,GAZ9B,cAcnDF,EAAS,CACLf,KAAMV,IAfyC,gDAkBnDyB,EAAS,CACLf,KAAMT,IAnByC,yDAAnC,wDI4CTmC,eARS,SAAAC,GAAK,MAAK,CAC9BjB,gBAAiBiB,EAAMC,KAAKlB,mBAOQI,EAAzBY,CAA6Ca,GCtEtDY,E,4MAMFxB,MAAQ,CACJa,SAAU,GACVC,SAAU,I,EAGdE,SAAW,SAAAC,GAAC,OAAI,EAAKV,SAAL,eAAiBU,EAAEC,OAAOR,KAAOO,EAAEC,OAAOP,S,EAE1DQ,SAAW,SAAAF,GACPA,EAAEG,iBADU,MAEmB,EAAKpB,MAA5Ba,EAFI,EAEJA,SAAUC,EAFN,EAEMA,SAElB,EAAKhC,MAAM2C,MAAMZ,EAAUC,I,uDAI3B,IAAmC,IAA/BjC,KAAKC,MAAMC,gBACX,OAAO,cAAC,IAAD,CAAUX,GAAG,eAFnB,MAI0BS,KAAKmB,MAA5Ba,EAJH,EAIGA,SAAUC,EAJb,EAIaA,SAElB,OACI,uBAAMK,SAAUtC,KAAKsC,SAArB,UACI,cAAC,EAAD,IAEA,8CACA,uBACIT,KAAK,WACLY,YAAY,cACZX,MAAOE,EACPG,SAAUnC,KAAKmC,SACfO,UAAQ,IAEZ,8CACA,uBACIb,KAAK,WACLY,YAAY,cACZX,MAAOG,EACPE,SAAUnC,KAAKmC,SACfO,UAAQ,IAGZ,wBAAQpD,UAAU,kBAAlB,0B,GA/CIe,aAyDdC,EAAqB,CACvBsC,MLRiB,SAACZ,EAAUC,GAAX,8CAAwB,WAAM1B,GAAN,iBAAAC,EAAA,6DACnCC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAI7BC,EAAOC,KAAKC,UAAU,CAAEiB,WAAUC,aATC,kBAYnBjB,IAAMC,KAAN,4CAAwDJ,EAAMJ,GAZ3C,cAcrCF,EAAS,CACLf,KAAMR,IAf2B,gDAkBrCuB,EAAS,CACLf,KAAMP,IAnB2B,yDAAxB,wDKWNiC,eARS,SAAAC,GAAK,MAAK,CAC9BjB,gBAAiBiB,EAAMC,KAAKlB,mBAOQI,EAAzBY,CAA6CyB,GCtB7CE,E,4MA3CX1B,MAAQ,CACJ2B,SAAS,EACTC,SAAU,I,2MAKY/B,IAAMJ,IAAI,uC,OAAtBoC,E,OAENhD,KAAK0B,SAAS,CACVoB,SAAS,EACTC,SAAUC,EAAIC,O,gDAGlBjD,KAAK0B,SAAS,CACVoB,SAAS,EACTC,SAAU,K,8IAKZ,IAAD,EACyB/C,KAAKmB,MAA3B2B,EADH,EACGA,QAASC,EADZ,EACYA,SAEjB,OAAID,EACO,0CAEXnB,QAAQC,IAAImB,GAGR,8BAEQA,EAASG,OAAS,EAAIH,EAASI,KAAI,SAACC,EAASC,GAAV,OAC/B,gCACKD,EAAQtD,GADb,MACoBsD,EAAQpB,WADlBqB,MAGT,U,GArCDhD,a,gCCOlBiD,EAAe,CACjBpD,gBAAiB,KACjBqD,KAAM,ICTKC,4BAAgB,CAC3BpC,KDYW,WAAsC,IAA7BD,EAA4B,uDAAtBmC,EAAcG,EAAQ,uCACxCjE,EAAkBiE,EAAlBjE,KAAMkE,EAAYD,EAAZC,QAEd,OAAOlE,GACH,KAAKN,EACD,OAAO,2BACAiC,GADP,IAEIjB,gBAAiBwD,IAEzB,KAAK5E,EACL,KAAKE,EACD,OAAO,2BACAmC,GADP,IAEIjB,iBAAiB,IAEzB,KAAKnB,EACL,KAAKI,EACL,KAAKC,EACL,KAAKH,EACD,OAAOqE,EACX,QACI,OAAOnC,ME9BbwC,EAAa,CAACC,KAQLC,EANDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCuB5BO,E,kLAnBbL,EAAMtD,SVJ0B,uCAAM,WAAMA,GAAN,iBAAAC,EAAA,6DAC9BC,EAAS,CACXC,QAAS,CACL,OAAU,mBACV,eAAgB,qBAJY,kBASdM,IAAMJ,IAAN,oDAA+DH,GATjD,OAS1BuC,EAT0B,OAWhCzC,EAAS,CACLf,KAAMN,EACNwE,QAASV,EAAIC,KAAK/C,kBAbU,gDAgBhCK,EAAS,CACLf,KAAML,IAjBsB,yDAAN,yD,+BUQhC,OACC,cAAC,IAAD,CAAU0E,MAAOA,EAAjB,SACC,cAAC,IAAD,UACC,eAAC,EAAD,WACC,cAAC,IAAD,CAAO9D,OAAK,EAACoE,KAAK,IAAIC,UAAW7C,IACjC,cAAC,IAAD,CAAOxB,OAAK,EAACoE,KAAK,YAAYC,UAAWrC,IACzC,cAAC,IAAD,CAAOhC,OAAK,EAACoE,KAAK,SAASC,UAAWzB,IACtC,cAAC,IAAD,CAAO5C,OAAK,EAACoE,KAAK,aAAaC,UAAWvB,e,GAb9BxC,aCFHgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACN,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM3Bb,M","file":"static/js/main.bf79b9c4.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\n\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nimport { logout } from '../redux/actions/auth'\r\n\r\nclass Navbar extends Component {\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        logout: PropTypes.func.isRequired,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">Navbar</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" exact to=\"/\">Home</NavLink>\r\n                                {\r\n                                    this.props.isAuthenticated ? (\r\n                                        <NavLink className=\"nav-link\" exact to=\"/\" onClick={this.props.logout}>Logout</NavLink>\r\n                                    ) : (\r\n                                        <>\r\n                                            <NavLink className=\"nav-link\" exact to=\"/login\">Login</NavLink>\r\n                                            <NavLink className=\"nav-link\" exact to=\"/register\">Register</NavLink>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    logout,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","import Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT_SUCCESS\r\n} from './types'\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get(`http://localhost:8000/api/accounts/authenticated/`, config)\r\n\r\n        dispatch({\r\n            type: AUTHENTICATED_SUCCESS,\r\n            payload: res.data.isAuthenticated\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (username, password, password2) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ username, password, password2 })\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/api/accounts/signup/`, body, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ username, password })\r\n\r\n    try {\r\n        const res = await axios.post(`http://localhost:8000/api/accounts/login/`, body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true\r\n    })\r\n\r\n    await axios.post(`http://localhost:8000/api/accounts/logout/`, body, config)\r\n\r\n    dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport Navbar from '../components/Navbar'\r\n\r\nexport class Layout extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <Switch>\r\n                    {this.props.children}\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"mt-5 p-5 bg-light\">\r\n                    <h1 className=\"display-4\">Welcome to Session Auth</h1>\r\n                    <p className=\"lead\">\r\n                        here is some jumbotron\r\n                    </p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>Click the button below to log in</p>\r\n                    <Link to=\"/login\" className=\"btn btn-primary btn-lg\">Login</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nclass CSRFToken extends Component {\r\n    state = {\r\n        csrftoken: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await axios.get('http://localhost:8000/api/accounts/csrf_cookie/')\r\n\r\n            this.setState({ csrftoken: Cookies.get('csrftoken') })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { csrftoken } = this.state\r\n\r\n        return (\r\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CSRFToken\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { register } from '../redux/actions/auth'\r\nimport { Redirect } from 'react-router-dom'\r\nimport CSRFToken from '../components/CSRFToken'\r\n\r\nexport class Register extends Component {\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        register: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        password2: '',\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n        const { username, password, password2 } = this.state\r\n\r\n        this.props.register(username, password, password2)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated === true)\r\n            return <Redirect to=\"/dashboard\" />\r\n\r\n        const { username, password, password2 } = this.state\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <CSRFToken />\r\n\r\n                <label>Username:</label>\r\n                <input\r\n                    name=\"username\"\r\n                    placeholder=\"Username...\"\r\n                    value={username}\r\n                    onChange={this.onChange}\r\n                    required\r\n                />\r\n                <label>password:</label>\r\n                <input\r\n                    name=\"password\"\r\n                    placeholder=\"Password...\"\r\n                    value={password}\r\n                    onChange={this.onChange}\r\n                    required\r\n                />\r\n                <label>Confirm Password:</label>\r\n                <input\r\n                    name=\"password2\"\r\n                    placeholder=\"Confirm password...\"\r\n                    value={password2}\r\n                    onChange={this.onChange}\r\n                    required\r\n                />\r\n\r\n                <button className=\"btn btn-success\">Register</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    register,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { login } from '../redux/actions/auth'\r\nimport { Redirect } from 'react-router-dom'\r\nimport CSRFToken from '../components/CSRFToken'\r\n\r\nclass Login extends Component {\r\n    static propTypes = {\r\n        isAuthenticated: PropTypes.bool,\r\n        login: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n        const { username, password } = this.state\r\n\r\n        this.props.login(username, password)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated === true)\r\n            return <Redirect to=\"/dashboard\" />\r\n\r\n        const { username, password } = this.state\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <CSRFToken />\r\n\r\n                <label>Username:</label>\r\n                <input\r\n                    name=\"username\"\r\n                    placeholder=\"Username...\"\r\n                    value={username}\r\n                    onChange={this.onChange}\r\n                    required\r\n                />\r\n                <label>password:</label>\r\n                <input\r\n                    name=\"password\"\r\n                    placeholder=\"Password...\"\r\n                    value={password}\r\n                    onChange={this.onChange}\r\n                    required\r\n                />\r\n\r\n                <button className=\"btn btn-success\">Login</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        loading: true,\r\n        accounts: [],\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const res = await axios.get('http://localhost:8000/api/accounts/')\r\n\r\n            this.setState({\r\n                loading: false,\r\n                accounts: res.data,\r\n            })\r\n        } catch (err) {\r\n            this.setState({\r\n                loading: false,\r\n                accounts: [],\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, accounts } = this.state\r\n\r\n        if (loading)\r\n            return <h1>Loading</h1>\r\n\r\n        console.log(accounts)\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    accounts.length > 0 ? accounts.map((account, index) => (\r\n                        <div key={index}>\r\n                            {account.id} - {account.username}\r\n                        </div>\r\n                    )) : ''\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    user: {},\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default function(state=initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload,\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTHENTICATED_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case LOGIN_FAIL:\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialStore = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialStore,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Layout from './hocs/Layout'\n\nimport Home from './containers/Home'\nimport Register from './containers/Register'\nimport Login from './containers/Login'\nimport Dashboard from './containers/Dashboard'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { checkAuthenticated } from './redux/actions/auth'\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tstore.dispatch(checkAuthenticated())\n\t}\n\n  \trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Layout>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t</Layout>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t)\n   }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \t<React.StrictMode>\n    \t<App />\n  \t</React.StrictMode>,\n  \tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}